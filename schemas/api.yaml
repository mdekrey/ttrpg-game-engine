openapi: "3.0.2"
info:
  title: Dnd Classes
  version: "1.0"
servers:
  - url: /

components:
  responses:
    ModelValidation:
      description: Request was sent that did not match validation rules in spec
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: array
              items:
                type: string
  schemas:
    FlavorText:
      type: object
      additionalProperties:
        type: string
    LegacyRuleSummary:
      type: object
      required:
        - wizardsId
        - name
        - type
        - flavorText
      properties:
        wizardsId: { type: string }
        name: { type: string }
        flavorText: { type: string, nullable: true }
        type: { type: string }
    LegacyClassSummary:
      allOf:
        - { $ref: "#/components/schemas/LegacyRuleSummary" }
        - type: object
          required:
            - powerSource
            - role
          properties:
            powerSource: { type: string }
            role: { type: string }
    LegacyFeatSummary:
      allOf:
        - { $ref: "#/components/schemas/LegacyRuleSummary" }
        - type: object
          required:
            - prerequisites
          properties:
            prerequisites: { type: string }
    LegacyGearSummary:
      allOf:
        - { $ref: "#/components/schemas/LegacyRuleSummary" }
        - type: object
          required:
            - category
            - count
            - gold
            - silver
            - copper
            - weight
          properties:
            gold: { type: integer, nullable: true }
            silver: { type: integer, nullable: true }
            copper: { type: integer, nullable: true }
            category: { type: string }
            weight: { type: number, nullable: true }
            count: { type: number }
    LegacyArmorSummary:
      allOf:
        - { $ref: "#/components/schemas/LegacyRuleSummary" }
        - type: object
          required:
            - gold
            - armorType
            - armorCategory
            - armorBonus
            - itemSlot
            - weight
            - speed
            - check
            - minimumEnhancementBonus
          properties:
            gold: { type: integer }
            armorType: { type: string }
            armorCategory: { type: string }
            armorBonus: { type: integer }
            speed: { type: integer, nullable: true }
            check: { type: integer, nullable: true }
            weight: { type: number }
            minimumEnhancementBonus: { type: integer, nullable: true }
    LegacyWeaponSummary:
      allOf:
        - { $ref: "#/components/schemas/LegacyRuleSummary" }
        - type: object
          required:
            - weaponCategory
            - handsRequired
            - damage
            - group
            - properties
            - size
            - proficiencyBonus
            - range
            - gold
            - weight
          properties:
            weaponCategory: { type: string }
            handsRequired: { type: string }
            proficiencyBonus: { type: integer, nullable: true }
            damage: { type: string }
            range: { type: string, nullable: true }
            gold: { type: integer, nullable: true }
            weight: { type: number, nullable: true }
            group: { type: string }
            properties: { type: string }
            size: { type: string }
    LegacyMagicItemSummary:
      allOf:
        - { $ref: "#/components/schemas/LegacyRuleSummary" }
        - type: object
          required:
            - magicItemType
            - gold
            - level
          properties:
            gold: { type: integer, nullable: true }
            level: { type: integer, nullable: true }
            magicItemType: { type: string }
    LegacyRuleDetails:
      type: object
      required:
        - wizardsId
        - name
        - type
        - rules
        - sources
        - flavorText
        - description
        - shortDescription
      properties:
        wizardsId: { type: string }
        name: { type: string }
        flavorText: { type: string, nullable: true }
        type: { type: string }
        description: { type: string, nullable: true }
        shortDescription: { type: string, nullable: true }
        sources: { type: array, items: { type: string } }
        rules:
          type: array
          items: { $ref: "#/components/schemas/LegacyRuleText" }
    LegacyRuleText:
      type: object
      required:
        - label
        - text
      properties:
        label: { type: string }
        text: { type: string }
    LegacyRacialTraitDetails:
      type: object
      required:
        - details
        - powers
        - subTraits
      properties:
        details: { $ref: "#/components/schemas/LegacyRuleDetails" }
        powers:
          type: array
          items: { $ref: "#/components/schemas/LegacyPowerDetails" }
        subTraits:
          type: array
          items: { $ref: "#/components/schemas/LegacyRuleDetails" }
    LegacyClassFeatureDetails:
      type: object
      required:
        - details
        - powers
        - subFeatures
      properties:
        details: { $ref: "#/components/schemas/LegacyRuleDetails" }
        powers:
          type: array
          items: { $ref: "#/components/schemas/LegacyPowerDetails" }
        subFeatures:
          type: array
          items: { $ref: "#/components/schemas/LegacyClassFeatureDetails" }
    LegacyFeatDetails:
      type: object
      required:
        - details
        - prerequisites
        - powers
      properties:
        details: { $ref: "#/components/schemas/LegacyRuleDetails" }
        prerequisites: { type: string }
        powers:
          type: array
          items: { $ref: "#/components/schemas/LegacyPowerDetails" }
    LegacyClassDetails:
      type: object
      required:
        - details
        - builds
        - classFeatures
        - powers
      properties:
        details: { $ref: "#/components/schemas/LegacyRuleDetails" }
        builds:
          type: array
          items: { $ref: "#/components/schemas/LegacyRuleDetails" }
        classFeatures:
          type: array
          items: { $ref: "#/components/schemas/LegacyClassFeatureDetails" }
        powers:
          type: array
          items: { $ref: "#/components/schemas/LegacyPowerDetails" }
    LegacyRaceDetails:
      type: object
      required:
        - details
        - racialTraits
      properties:
        details: { $ref: "#/components/schemas/LegacyRuleDetails" }
        racialTraits:
          type: array
          items: { $ref: "#/components/schemas/LegacyRacialTraitDetails" }
    LegacyGearDetails:
      type: object
      required:
        - details
      properties:
        details: { $ref: "#/components/schemas/LegacyRuleDetails" }
    LegacyArmorDetails:
      type: object
      required:
        - details
      properties:
        details: { $ref: "#/components/schemas/LegacyRuleDetails" }
    LegacyWeaponDetails:
      type: object
      required:
        - details
      properties:
        details: { $ref: "#/components/schemas/LegacyRuleDetails" }
        secondaryEnd: { $ref: "#/components/schemas/LegacyRuleDetails" }
    LegacyMagicItemDetails:
      type: object
      required:
        - details
        - powers
        - level
      properties:
        details: { $ref: "#/components/schemas/LegacyRuleDetails" }
        level: { type: integer, nullable: true }
        powers:
          type: array
          items: { $ref: "#/components/schemas/LegacyPowerDetails" }
    LegacyPowerDetails:
      type: object
      required:
        - wizardsId
        - name
        - type
        - rules
        - display
        - powerUsage
        - keywords
        - actionType
        - encounterUses
        - powerType
        - level
        - sources
        - flavorText
        - description
        - shortDescription
      properties:
        wizardsId: { type: string }
        name: { type: string }
        flavorText: { type: string, nullable: true }
        type: { type: string }
        description: { type: string, nullable: true }
        shortDescription: { type: string, nullable: true }
        display: { type: string }
        powerUsage: { type: string }
        actionType: { type: string }
        powerType: { type: string }
        encounterUses: { type: integer }
        level: { type: string }
        sources: { type: array, items: { type: string } }
        rules:
          type: array
          items: { $ref: "#/components/schemas/LegacyRuleText" }
        keywords:
          type: array
          items: { type: string }
        childPower: { $ref: "#/components/schemas/LegacyPowerDetails" }
    Tier:
      type: string
      enum: [Heroic, Paragon, Epic]
paths:
  /api/legacy/races:
    x-dotnet-mvc-server-controller: Legacy
    get:
      operationId: getLegacyRaces
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: "#/components/schemas/LegacyRuleSummary" }
  /api/legacy/race/{id}:
    x-dotnet-mvc-server-controller: Legacy
    get:
      operationId: getLegacyRace
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/LegacyRaceDetails" }
        404:
          description: Race not found
  /api/legacy/classes:
    x-dotnet-mvc-server-controller: Legacy
    get:
      operationId: getLegacyClasses
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: "#/components/schemas/LegacyClassSummary" }
  /api/legacy/class/{id}:
    x-dotnet-mvc-server-controller: Legacy
    get:
      operationId: getLegacyClass
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/LegacyClassDetails" }
        404:
          description: Class not found
  /api/legacy/feat/{id}:
    x-dotnet-mvc-server-controller: Legacy
    get:
      operationId: getLegacyFeat
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/LegacyFeatDetails" }
        404:
          description: Feat not found
  /api/legacy/feats:
    x-dotnet-mvc-server-controller: Legacy
    get:
      operationId: getLegacyFeats
      parameters:
        - name: tier
          in: query
          schema: { type: array, items: { $ref: "#/components/schemas/Tier" } }
        - name: search
          in: query
          schema: { type: string }
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: "#/components/schemas/LegacyFeatSummary" }
  /api/legacy/items:
    x-dotnet-mvc-server-controller: Legacy
    get:
      operationId: getLegacyItems
      parameters:
        - name: search
          in: query
          schema: { type: string }
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - gear
                  - armor
                  - weapons
                  # - others
                properties:
                  gear:
                    {
                      type: array,
                      items: { $ref: "#/components/schemas/LegacyGearSummary" },
                    }
                  armor:
                    {
                      type: array,
                      items:
                        { $ref: "#/components/schemas/LegacyArmorSummary" },
                    }
                  weapons:
                    {
                      type: array,
                      items:
                        { $ref: "#/components/schemas/LegacyWeaponSummary" },
                    }
  /api/legacy/gear/{id}:
    x-dotnet-mvc-server-controller: Legacy
    get:
      operationId: getLegacyGear
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/LegacyGearDetails" }
        404:
          description: Gear not found
  /api/legacy/armor/{id}:
    x-dotnet-mvc-server-controller: Legacy
    get:
      operationId: getLegacyArmor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/LegacyArmorDetails" }
        404:
          description: Armor not found
  /api/legacy/weapon/{id}:
    x-dotnet-mvc-server-controller: Legacy
    get:
      operationId: getLegacyWeapon
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/LegacyWeaponDetails" }
        404:
          description: Weapon not found
  /api/legacy/magic-items:
    x-dotnet-mvc-server-controller: Legacy
    get:
      operationId: getLegacyMagicItems
      parameters:
        - name: minLevel
          in: query
          schema: { type: integer }
        - name: maxLevel
          in: query
          schema: { type: integer }
        - name: search
          in: query
          schema: { type: string }
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: "#/components/schemas/LegacyMagicItemSummary" }
  /api/legacy/magic-item/{id}:
    x-dotnet-mvc-server-controller: Legacy
    get:
      operationId: getLegacyMagicItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/LegacyMagicItemDetails" }
        404:
          description: Magic Item not found
  /api/legacy/powers:
    x-dotnet-mvc-server-controller: Legacy
    get:
      operationId: getLegacyPowers
      parameters:
        - name: minLevel
          in: query
          schema: { type: integer }
        - name: maxLevel
          in: query
          schema: { type: integer }
        - name: search
          in: query
          schema: { type: string }
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: "#/components/schemas/LegacyPowerDetails" }
  /api/legacy/power/{id}:
    x-dotnet-mvc-server-controller: Legacy
    get:
      operationId: getLegacyPower
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: { $ref: "#/components/schemas/LegacyPowerDetails" }
        404:
          description: Power not found
